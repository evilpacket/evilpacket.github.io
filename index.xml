<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EvilPacket</title>
    <link>//localhost:1313/</link>
    <description>Recent content on EvilPacket</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Nov 2024 00:00:00 -0500</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Old EvilPacket Videos</title>
      <link>//localhost:1313/videos/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 -0500</pubDate>
      <guid>//localhost:1313/videos/</guid>
      <description>&lt;p&gt;Many years ago I made a series of videos on vulnerabilities I found under the theme &amp;ldquo;education through exploitation&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Attacking OSS Using Abandoned Resources</title>
      <link>//localhost:1313/blog/attacking-oss-using-abandoned-resources/</link>
      <pubDate>Thu, 28 Jan 2021 17:35:34 -0800</pubDate>
      <guid>//localhost:1313/blog/attacking-oss-using-abandoned-resources/</guid>
      <description>&lt;p&gt;In December I discovered a supply chain vulnerability that impacted 6,530 public npm package versions, at least I thought I did. Turns out that earlier in October of 2020 Security Innovation published similar research dubbing the issue &lt;a href=&#34;https://blog.securityinnovation.com/repo-jacking-exploiting-the-dependency-supply-chain&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Repo Jacking&lt;/a&gt;. This initially took the wind out of my sails but after I thought about it rediscovery is pretty cool and I was able to expand upon it a bit by focusing on abandoned S3 buckets, Google Cloud Storage bucket, expired domain names, and finding and reporting a vulnerability in GitHub to make exploitation possible in some conditions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Headless Holiday Hack: Flag 1</title>
      <link>//localhost:1313/blog/headless-holiday-hack-part-1/</link>
      <pubDate>Fri, 27 Nov 2020 08:04:37 -0800</pubDate>
      <guid>//localhost:1313/blog/headless-holiday-hack-part-1/</guid>
      <description>&lt;p&gt;Last night I tossed up a quick CTF-esque challenge with a couple of flags defined.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Favorite Vulnerability: From ERROR to inter-protocol exploitation</title>
      <link>//localhost:1313/blog/my-favorite-vuln/</link>
      <pubDate>Sun, 09 Feb 2020 10:00:13 -0800</pubDate>
      <guid>//localhost:1313/blog/my-favorite-vuln/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m excited to finally write up and share my favorite vulnerability I&amp;rsquo;ve ever found. It&amp;rsquo;s a story where all the right pieces fell into place to make it exploitable. The names, ports, and other details have been changed to protect the vulnerable even though this took place probably 6 years ago and I believe the devices are now sunsetted.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Identify an O.MG Cable</title>
      <link>//localhost:1313/blog/identify-an-omg-cable/</link>
      <pubDate>Mon, 06 Jan 2020 17:34:01 -0800</pubDate>
      <guid>//localhost:1313/blog/identify-an-omg-cable/</guid>
      <description>&lt;p&gt;Today I got my hands on an &lt;a href=&#34;https://shop.hak5.org/products/o-mg-cable&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;O.MG cable&lt;/a&gt;. It is extremely well manufactured and to most it will be extremely stealthy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Chrome Debugger Metasploit Gather Module</title>
      <link>//localhost:1313/blog/using-chrome-debugger-msf-gather-module/</link>
      <pubDate>Thu, 19 Dec 2019 09:19:25 -0800</pubDate>
      <guid>//localhost:1313/blog/using-chrome-debugger-msf-gather-module/</guid>
      <description>&lt;p&gt;This last week &lt;a href=&#34;https://twitter.com/nstarke&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Nick Starke&lt;/a&gt; got the &lt;a href=&#34;https://blog.rapid7.com/2019/12/13/metasploit-wrap-up-45/&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;chrome debugger metasploit module&lt;/a&gt; pushed over the line and merged into master. I figured I&amp;rsquo;d write up a quick intro to the module and how it might be used should you happen to stumble across a chrome debugger laying around the network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leveraging Javascript Debuggers for compromise</title>
      <link>//localhost:1313/blog/leveraging-javascript-debuggers/</link>
      <pubDate>Tue, 10 Sep 2019 16:27:22 -0700</pubDate>
      <guid>//localhost:1313/blog/leveraging-javascript-debuggers/</guid>
      <description>&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;&#xA;&lt;p&gt;I discovered that developers do leave remote JavaScript debuggers and headless browsers laying around on the internet leading to sensitive data exposure and an interesting remote position for an attacker.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE / Vulnerabilities / Advisories</title>
      <link>//localhost:1313/vulns/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 -0400</pubDate>
      <guid>//localhost:1313/vulns/</guid>
      <description>&lt;p&gt;Here are some vulnerabilities I&amp;rsquo;ve found over the years. It is in no way a complete archive, but it&amp;rsquo;s a pretty good list of CVEs&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presentations and Podcasts</title>
      <link>//localhost:1313/presentations/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 -0400</pubDate>
      <guid>//localhost:1313/presentations/</guid>
      <description>&lt;h1 id=&#34;2021&#34;&gt;2021&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Speakeasy JS - &lt;a href=&#34;https://www.youtube.com/watch?v=GnuJkbLkYnw&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Attacking Open Source using Abandoned Resources&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2020&#34;&gt;2020&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenJS World - &lt;a href=&#34;https://www.youtube.com/watch?v=TkEty9PV9ro&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Fireside Chat on JavaScript Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Node.js Global Summit - JavaScript Supply Chain Security&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2019&#34;&gt;2019&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LocoMocoSec, &lt;a href=&#34;https://www.youtube.com/watch?v=HDo2iOlkbyc&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;JavaScript Supply Chain Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Container Security Summit - JavaScript Supply Chain Security&lt;/li&gt;&#xA;&lt;li&gt;Absolute AppSec - &lt;a href=&#34;https://www.youtube.com/watch?v=EQ9cZFyJ_xA&amp;amp;feature=youtu.be&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;EP #65&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Real Talk JavaScript - &lt;a href=&#34;https://realtalkjavascript.simplecast.fm/33196473&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Secure JavaScript&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2018&#34;&gt;2018&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;BrazilJS - &lt;a href=&#34;https://www.youtube.com/watch?v=hxlEct_FCEk&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Becoming a Security Minded Developer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Node Summit - &lt;a href=&#34;https://vimeo.com/287729415&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Security Panel&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Thunderplains - &lt;a href=&#34;https://www.youtube.com/watch?v=rn0U_vPEqZY&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;The Developer Trail: Adventures shipping secure software&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://brakeingsecurity.com/2018-043-adam-baldwin-npmjs-director-of-security-event-stream-post-mortem-and-making-your-package-system-more-secure&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Brakeing Down Security Podcast&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JavaScript Jabber - &lt;a href=&#34;https://devchat.tv/js-jabber/jsj-294-node-security-adam-baldwin/&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Node Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JS Party - &lt;a href=&#34;https://changelog.com/jsparty/23&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;The state of Node security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2017&#34;&gt;2017&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Node Summit - &lt;a href=&#34;https://vimeo.com/229529077&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Hunting for malicious modules in npm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;NodeConf AR - &lt;a href=&#34;https://www.youtube.com/watch?v=AGJV4PgZXns&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Continuous Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;The Manifest - &lt;a href=&#34;https://www.iheart.com/podcast/256-the-manifest-31120517/episode/episode-9-typosquatting-with-adam-baldwin-39946713/&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Typosquatting&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Exploring Information Security podcast - &lt;a href=&#34;http://www.timothydeblock.com/eis/tag/Adam&amp;#43;Baldwin&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;What is the Node Security Platform&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2016&#34;&gt;2016&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Node Summit - &lt;a href=&#34;https://vimeo.com/179274716&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Security Panel&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;EmpireJS - &lt;a href=&#34;https://www.youtube.com/watch?v=-N-WB7hnPsE&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Continuous Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Thunderplains - Continuous Security&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2015&#34;&gt;2015&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Nodevember - &lt;a href=&#34;https://www.youtube.com/watch?v=QxH9PWreUPE&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Node Security Experiements&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;CascadiaFest - &lt;a href=&#34;https://www.youtube.com/watch?v=ePPbjaFLN88&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;The art of identifying vulnerabilities&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;SINFO - &lt;a href=&#34;https://www.youtube.com/watch?v=9iz_Q30Yiaw&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Breaking into Security&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Node Summit - &lt;a href=&#34;https://vimeo.com/123546531&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Security Panel&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;OpoJS - &lt;a href=&#34;https://www.youtube.com/watch?v=n8a1BZcgCG4&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;OWASP Top 10 / requireSafe&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2014&#34;&gt;2014&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JSFest - &lt;a href=&#34;https://www.youtube.com/watch?v=rjzpPlY5Kck&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;A Security Carol&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;NodeDay at PayPal - &lt;a href=&#34;https://www.youtube.com/watch?v=Zc8QvuRbdoQ&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Node Security in the Enterprise&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ThunderPlains - &lt;a href=&#34;https://www.youtube.com/watch?v=4vccPZcq08w&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Node Security Live&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2013&#34;&gt;2013&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LXJS - &lt;a href=&#34;https://www.youtube.com/watch?v=49Bpzq6okWk&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Introducing the Node Security Project&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JSConf EU - &lt;a href=&#34;https://www.youtube.com/watch?v=_aUKRh74JRY&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Security First&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JSConf US - &lt;a href=&#34;https://www.youtube.com/watch?v=82-hJk5WryU&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Builders vs Breakers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;NodePDX - &lt;a href=&#34;https://www.youtube.com/watch?v=UfCFFC-ilmI&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Introducing nodesecurity.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JavaScript Jabber - &lt;a href=&#34;https://devchat.tv/js-jabber/089-jsj-the-node-security-project-with-adam-baldwin/&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;The Node Security Project&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2012&#34;&gt;2012&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DEFCON 20 - &lt;a href=&#34;https://www.youtube.com/watch?v=LV8IU3r1hr0&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Blind XSS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;RedisConf - EvilSHA - Cracking SHA hashes using publicly available Redis instances&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2011&#34;&gt;2011&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DEFCON 19 - &lt;a href=&#34;https://www.youtube.com/watch?v=1q42YAksVeg&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Pillaging DVCS Repos for fun and profit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Toorcon 13 - &lt;a href=&#34;https://www.youtube.com/watch?v=qBWTkZqY8GI&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Pillaging DVCS Repos for fun and profit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JSConf US - &lt;a href=&#34;https://www.youtube.com/watch?v=uVIcK4UXKWs&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Writing an (in)secure webapp&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Keeping it Realtime - &lt;a href=&#34;https://vimeo.com/42487947&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Old problems, new tools&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2010&#34;&gt;2010&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Djangocon - &lt;a href=&#34;https://pyvideo.org/djangocon-us-2010/djangocon-2010--pony-pwning.html&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Pony Pwning&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2009&#34;&gt;2009&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Toorcamp - Introduction to w3af&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Enumerating Files Using Server Side Request Forgery and the request Module</title>
      <link>//localhost:1313/blog/enumerating-files-using-server-side-request-forgery-and-the-request-module/</link>
      <pubDate>Fri, 15 Dec 2017 09:02:16 -0800</pubDate>
      <guid>//localhost:1313/blog/enumerating-files-using-server-side-request-forgery-and-the-request-module/</guid>
      <description>&lt;p&gt;If you ever find Server Side Request Forgery (SSRF) in a node.js based application and the app is using the request module you can use a special url format to detect the existence of files / directories.&lt;/p&gt;</description>
    </item>
    <item>
      <title>npm Registry Spelunking: Dependencies Referenced by URL</title>
      <link>//localhost:1313/blog/npm-registry-spelunking-dependencies-referenced-by-url/</link>
      <pubDate>Wed, 08 Nov 2017 14:40:22 -0800</pubDate>
      <guid>//localhost:1313/blog/npm-registry-spelunking-dependencies-referenced-by-url/</guid>
      <description>&lt;p&gt;I’ve learned a long time ago that not all security research pans out with a stack of vulnerabilities but every time I venture down a rabbit hole I learn something along the way. This is one of those times.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bypassing npm / yarn ignore Scripts with Command Injection</title>
      <link>//localhost:1313/blog/bypassing-npm-ignore-scripts-with-command-injection-in-package-json/</link>
      <pubDate>Thu, 10 Aug 2017 17:11:17 -0700</pubDate>
      <guid>//localhost:1313/blog/bypassing-npm-ignore-scripts-with-command-injection-in-package-json/</guid>
      <description>&lt;p&gt;Before you read this post please run &lt;code&gt;git --version&lt;/code&gt; and if it’s not &lt;em&gt;2.14.1&lt;/em&gt; or greater then please go upgrade it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My story about mentorship and my career</title>
      <link>//localhost:1313/blog/my-story-about-mentorship/</link>
      <pubDate>Tue, 20 Jun 2017 18:41:00 -0700</pubDate>
      <guid>//localhost:1313/blog/my-story-about-mentorship/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://medium.com/@ThePracticalDev&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;Practical Developer DevDiscuss&lt;/a&gt; one day got me thinking about mentorship and how it’s impacted my life. It doesn’t fit in a tweet or a thread of tweets so you get the story about how a mentorship gave me my entire career in security. This is going to be a bit stream of mind so give me a break on grammar and spelling :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>In Memory Backdoor for Node.js Express Apps</title>
      <link>//localhost:1313/blog/in-memory-backdoor-for-node-js-express-apps/</link>
      <pubDate>Thu, 02 Mar 2017 17:15:51 -0800</pubDate>
      <guid>//localhost:1313/blog/in-memory-backdoor-for-node-js-express-apps/</guid>
      <description>&lt;p&gt;Earlier this week Zach Grace published an article on one way that you could backdoor a Node.js Express application without touching disk. This jogged my memory of something I posted in our team’s chat this last week but never wrote about; how I would in memory backdoor an express application. It’s a bit different than how Zach approached it so I thought it would be good to expand upon his post sharing the knowledge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Compromising Node.js apps using Machine-in-the-Middle</title>
      <link>//localhost:1313/blog/compromising-node-js-apps-using-machine-in-the-middle/</link>
      <pubDate>Wed, 11 Jan 2017 16:31:08 -0800</pubDate>
      <guid>//localhost:1313/blog/compromising-node-js-apps-using-machine-in-the-middle/</guid>
      <description>&lt;p&gt;Just before the New Years I published 140+ advisories on Node.js modules. I’ve been researching ways to compromise developers &amp;amp; node.js applications without compromising the npm registry or their CDN.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pillaging Distributed Version Control 5 Years Later</title>
      <link>//localhost:1313/blog/pillaging-distributed-version-control-5-years-later/</link>
      <pubDate>Sun, 13 Nov 2016 10:38:59 -0700</pubDate>
      <guid>//localhost:1313/blog/pillaging-distributed-version-control-5-years-later/</guid>
      <description>&lt;p&gt;5 years ago at DEFCON 19 I gave a talked titled “Pillaging DVCS repos for fun and profit.” The technique &amp;amp; tool I outlined in that talk has been very fruitful through out the years and plenty of security consultants have told me that this had helped them have breakthroughs during penetration tests. If it’s useful to us it’s also useful to attackers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Are the Bots Up to on npm?</title>
      <link>//localhost:1313/blog/what-are-the-bots-up-to-on-npm/</link>
      <pubDate>Tue, 08 Nov 2016 15:59:14 -0700</pubDate>
      <guid>//localhost:1313/blog/what-are-the-bots-up-to-on-npm/</guid>
      <description>&lt;p&gt;Last year (2015) I had a thought, “who else is downloading and running / testing random modules on npm.” Postulating that there might be bots, build systems or other researchers mass downloading and running modules from npm. I figured it might be an interesting vector to attack systems and gain a foothold for some org and I was curious to know what that traffic looked like.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atom.io Misconfiguration Allowed Code Execution on Untrusted Networks</title>
      <link>//localhost:1313/blog/atom-io-misconfiguration-allowed-code-execution-on-untrusted-networks/</link>
      <pubDate>Sun, 30 Oct 2016 09:16:51 -0700</pubDate>
      <guid>//localhost:1313/blog/atom-io-misconfiguration-allowed-code-execution-on-untrusted-networks/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2016/10/atom_header.png&#34;&gt;&#xA;Developers have increasingly become a more valuable target to compromise in recent years. The DevOps movement means they have more access to production, not to mention the plethora of source code and keys that you are likely to find.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Brilliant Hire Exposure No Bounty</title>
      <link>//localhost:1313/blog/brilliant-hire-exposure-no-bounty/</link>
      <pubDate>Sun, 30 Oct 2016 09:16:51 -0700</pubDate>
      <guid>//localhost:1313/blog/brilliant-hire-exposure-no-bounty/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2019/11/debugger.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;During security research a few years back, I discovered an exposure on SAP&amp;rsquo;s BrilliantHire API - an exposed Node.js debugger instance that provided full remote code execution capabilities and access to sensitive AWS credentials, database encryption keys, and production source code. The finding highlights how a simple misconfiguration can lead to complete system compromise.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regular Expression Denial of Service Affecting Express.js</title>
      <link>//localhost:1313/blog/regular-expression-denial-of-service-affecting-express-js/</link>
      <pubDate>Fri, 29 Apr 2016 15:59:41 -0700</pubDate>
      <guid>//localhost:1313/blog/regular-expression-denial-of-service-affecting-express-js/</guid>
      <description>&lt;p&gt;At the end of April I found a flaw in a module that Express and many other frameworks use. This flaw allows a remote attacker to block the event loop of a remote site causing a Denial of Service effectively blocking the site from being accessed. This type of attack is known as a Regular Expression Denial of Service attack and we’ve found it to be quite common in applications and modules we test.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elements</title>
      <link>//localhost:1313/elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/elements/</guid>
      <description>&lt;details class=&#34;table-of-content &#34;&gt;&#xA;  &lt;summary&gt;&#xA;    &#xA;      Table of Contents&#xA;    &#xA;  &lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ol&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#heading-2&#34;&gt;Heading 2&lt;/a&gt;&#xA;      &lt;ol&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#heading-3&#34;&gt;Heading 3&lt;/a&gt;&#xA;          &lt;ol&gt;&#xA;            &lt;li&gt;&lt;a href=&#34;#heading-4&#34;&gt;Heading 4&lt;/a&gt;&#xA;              &lt;ol&gt;&#xA;                &lt;li&gt;&lt;a href=&#34;#heading-5&#34;&gt;Heading 5&lt;/a&gt;&lt;/li&gt;&#xA;              &lt;/ol&gt;&#xA;            &lt;/li&gt;&#xA;          &lt;/ol&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#emphasis&#34;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#button&#34;&gt;Button&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#link&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#paragraph&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#ordered-list&#34;&gt;Ordered List&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#unordered-list&#34;&gt;Unordered List&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#notice&#34;&gt;Notice&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#tab&#34;&gt;Tab&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#accordions&#34;&gt;Accordions&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#code-and-syntax-highlighting&#34;&gt;Code and Syntax Highlighting&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#blockquote&#34;&gt;Blockquote&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#tables&#34;&gt;Tables&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#image&#34;&gt;Image&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#slider&#34;&gt;Slider&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#youtube-video&#34;&gt;Youtube video&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#custom-video&#34;&gt;Custom video&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ol&gt;&#xA;    &lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&#xA;&lt;p&gt;Here is an example of headings. You can use this heading by the following markdown rules. For example: use &lt;code&gt;#&lt;/code&gt; for heading 1 and use &lt;code&gt;######&lt;/code&gt; for heading 6.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Privacy</title>
      <link>//localhost:1313/privacy-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/privacy-policy/</guid>
      <description>&lt;h4 id=&#34;responsibility-of-contributors&#34;&gt;Responsibility of Contributors&lt;/h4&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus, donec nunc eros, ullamcorper id feugiat quisque aliquam sagittis. Sem turpis sed viverra massa gravida pharetra. Non dui dolor potenti eu dignissim fusce. Ultrices amet, in curabitur a arcu a lectus morbi id. Iaculis erat sagittis in tortor cursus. Molestie urna eu tortor, erat scelerisque eget. Nunc hendrerit sed interdum lacus. Lorem quis viverra sed&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ready to build your next project with Hugo?</title>
      <link></link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid></guid>
      <description></description>
    </item>
    <item>
      <title>What Users Are Saying About Hugoplate</title>
      <link></link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid></guid>
      <description></description>
    </item>
  </channel>
</rss>
